buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        // Plugins for Android
        classpath 'com.android.tools.build:gradle:4.0.0'
    }
}

plugins {
    // Plugin for uploading to bintray
    // Note: Causes a classpath conflict for org.apache.tools.zip
    id 'com.jfrog.bintray' version '1.8.4'

    // Google error-prone
    id 'net.ltgt.errorprone' version '1.1.1' apply false
}

apply from: 'dependencies.gradle'

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'

    group = 'nl.weeaboo.luajpp2'
    version = '3.1.0'

    repositories {
        google()
        jcenter()
    }

    bintray {   
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        pkg {
            repo = 'luajpp2'
            name = 'luajpp2'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/anonl/luajpp2.git'
            version {
                name = project.version
            }
        }
    }    
}

subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    ext {
        javaVersion = JavaVersion.VERSION_1_8

        pomLicenseConfig = {
           licenses {
                license {
                    name 'MIT'
                    url 'https://opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }
        }
        pomLicenseConfig.resolveStrategy = Closure.DELEGATE_ONLY // Otherwise 'license' elem is missing
    }

    plugins.withType(JavaPlugin) {
        sourceCompatibility = javaVersion

        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
        }

        dependencies {
            compileOnly deps.static_analysis_annotations
            implementation deps.slf4j_api

            testCompileOnly deps.static_analysis_annotations
            testImplementation deps.junit
            testRuntimeOnly deps.slf4j_desktop
        }

        jacocoTestReport {
            reports {
                xml.enabled true
            }
        }

        task sourceJar(type: Jar) {
            from sourceSets.main.allJava
            classifier "sources"
        }

        project.apply from: rootProject.file('errorprone.gradle')
    }
}
